

/*

Taken from the small screen media query below...

.main-navigation {
  position: static;
  width: auto;
  padding: 20px 15px;
  float: none;
  margin: 0;

}

.main-navigation {
margin-top: 10px;
position: relative;
width: 100%;
background-color: $offWhite;
border: 0px solid black;
text-align: center;
background-image: url('http://caleb.local/wp-content/themes/say-hey/img/logo-t.png');
background-repeat: no-repeat;
background-position: top .25rem left 1rem;
background-size: 3.2rem auto;
font-size: 0;
}

*/


.main-navigation {
  margin-top: 0;
  background-color: $offWhite;
	position: relative;
  font-size: 0; /* to remove blank space under .menu-header-container  */
	top: 0px;
  left: 0px;
	padding: 0;
	width: 100%;
  border: 0px solid black;
  text-align: right; /* when wider than mobile, align the child <ul> block (nav links) to right of container */
  background: none;
}

.menu-header-container { /* Wordpress-generated nav container around top <ul>; align contents of nav list to left */
  display: inline-block;
  text-align: left;
  border: 0px solid red;
  font-size: 1rem;  /* reset font size after setting to zero in 'main-navigation' */
  margin: 0;
  padding: 0;
}

.main-navigation ul {
  list-style: none;
  margin: 0;
  padding: 0;
  z-index: 10;
}

.main-navigation ul li:hover { /* do I need to make this [ul li]? */
  background-color: $hoverGrey;
}

.menu a { /* Wordpress-generated class applied to the top-level <ul>; a more specific anchor target, leaves logo text alone */
  display: inline-block;
  color: $offBlack;
  padding: 10px 45px 10px 15px; /* Sets padding for the "buttons" in the SUB menus */
  border: 0px solid orange;
  text-decoration: none;
  width: 225px; /* defining a width here is essentially defining a width on sub-menu elements (we'll over-ride this width below for top-level links) */
  /* position: relative; will allow positioning of drop-down arrows inside anchor tag (commented out; arrows now placed after anchor inside <li>) */
}

.menu .sub-menu a {
  border-bottom: 1px solid rgba(0,0,0,.15);
}

.main-navigation ul ul {
  position: absolute; /* want to take sub-menus out of the flow so it doesn't take up vertical space in the parent */
  background-color: $offWhite;
  display: none; /* Will be revealed on parent <li> hover */
}

/*
This line will activate submenu on click
.main-navigation ul ul.toggled-on {
    display: block;
}
*/

/*
This line will activate submenu on hover
*/
.main-navigation li:hover > ul {
  display: block;
}

.main-navigation ul ul li {
  position: relative; /* to accommodate a possible sub-menu and will allow positioning of drop-down arrows within <li> */
}

.main-navigation ul ul ul {
  left: 100%;
  top: 0;
}


/* TOP LEVEL */

.main-navigation > div > ul {
  padding-left: 0px;
  /*overflow: hidden;*/
  border: none;
}

.main-navigation > div > ul > li {
  display: inline-block;
  margin: 0;
  float:left; /* experiment with turning this off... it may not be necessary with current styles */
  /* padding: 10px 45px 10px 15px; Sets padding for the top-level menu "buttons" */
  position: relative;
  border: none;
}

.main-navigation > div > ul > li > a {
  width: auto;
  padding: 10px 45px 10px 15px; /* Sets padding for the top-level menu "buttons" */
}

/*
.main-navigation > div > ul > li > a {
  width: auto;
  padding: 10px 45px 10px 15px;
}
*/


.dropdown-toggle {
	background-color: transparent;
	border: 0;
	-webkit-box-shadow: none;
	box-shadow: none;
  text-shadow: none;
	color: $offBlack;
	display: inline-block;
	font-size: .5rem;
	/*line-height: 1.5;*/
	margin: 0 .5rem;
	padding: 1rem;
	position: absolute;
	top: 1px;
  right: -.3rem;
  z-index: 999;
}

.dropdown-toggle:hover,
.dropdown-toggle:focus {
	background: transparent;
}

.dropdown-toggle:focus {
	outline: none;
}

.dropdown-toggle.toggled-on .icon {
	-ms-transform: rotate(-180deg); /* IE 9 */
	-webkit-transform: rotate(-180deg); /* Chrome, Safari, Opera */
	transform: rotate(-180deg);
}

/* Below is to rotate chevron when not on mobile (indicates submenu expands to the side) */
.sub-menu > li > button > span {
  @mixin atSmall {
    -ms-transform: rotate(-90deg); /* IE 9 */
  	-webkit-transform: rotate(-90deg); /* Chrome, Safari, Opera */
  	transform: rotate(-90deg);
  }
}
